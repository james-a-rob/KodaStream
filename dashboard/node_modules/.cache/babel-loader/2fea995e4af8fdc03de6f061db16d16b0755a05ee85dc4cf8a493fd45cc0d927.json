{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nconst QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary };","map":{"version":3,"names":["createValue","clearReset","isReset","reset","QueryErrorResetBoundaryContext","React","createContext","useQueryErrorResetBoundary","useContext","QueryErrorResetBoundary","children","value"],"sources":["/Users/jamesrobertson/Code/air/dashboard/node_modules/@tanstack/react-query/src/QueryErrorResetBoundary.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\n// CONTEXT\n\nexport interface QueryErrorResetBoundaryValue {\n  clearReset: () => void\n  isReset: () => boolean\n  reset: () => void\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport interface QueryErrorResetBoundaryProps {\n  children:\n    | ((value: QueryErrorResetBoundaryValue) => React.ReactNode)\n    | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function'\n        ? (children as Function)(value)\n        : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n"],"mappings":";;;AAWA,SAAAA,YAAA;;;IAGIC,UAAA,EAAAA,CAAA;MACEC,OAAA;;IAEFC,KAAA,EAAAA,CAAA;MACED,OAAA;;IAEFA,OAAA,EAAAA,CAAA;MACE,OAAAA,OAAA;IACD;;AAEJ;AAED,MAAAE,8BAAA,gBAAAC,KAAA,CAAAC,aAAA,CAAAN,WAAA;;AAIO,MAAAO,0BAAA,GAAAA,CAAA,KAAAF,KAAA,CAAAG,UAAA,CAAAJ,8BAAA;;AAWA,MAAAK,uBAAA,GAAAA,CAAA;EACLC;AADsC;;;IAKKC,KAAA,EAAAA;;AAM5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}
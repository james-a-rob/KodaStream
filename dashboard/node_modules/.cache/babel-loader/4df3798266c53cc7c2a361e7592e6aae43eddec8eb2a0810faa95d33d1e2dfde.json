{"ast":null,"code":"import { Subscribable } from './subscribable.mjs';\nimport { isServer } from './utils.mjs';\nclass FocusManager extends Subscribable {\n  constructor() {\n    super();\n    this.setup = onFocus => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus(); // Listen to visibillitychange and focus\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n  setEventListener(setup) {\n    var _this$cleanup2;\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(focused => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.focused !== focused;\n    if (changed) {\n      this.focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n  isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  }\n}\nconst focusManager = new FocusManager();\nexport { FocusManager, focusManager };","map":{"version":3,"names":["FocusManager","Subscribable","constructor","setup","onFocus","isServer","window","addEventListener","listener","removeEventListener","onSubscribe","cleanup","setEventListener","onUnsubscribe","hasListeners","_this$cleanup","call","undefined","_this$cleanup2","focused","setFocused","changed","listeners","forEach","isFocused","document","includes","visibilityState","focusManager"],"sources":["/Users/jamesrobertson/Code/air/dashboard/node_modules/@tanstack/query-core/src/focusManager.ts"],"sourcesContent":["import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable {\n  private focused?: boolean\n  private cleanup?: () => void\n\n  private setup: SetupFn\n\n  constructor() {\n    super()\n    this.setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibillitychange and focus\n        window.addEventListener('visibilitychange', listener, false)\n        window.addEventListener('focus', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n          window.removeEventListener('focus', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.cleanup?.()\n      this.cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.setup = setup\n    this.cleanup?.()\n    this.cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.focused !== focused\n    if (changed) {\n      this.focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    this.listeners.forEach(({ listener }) => {\n      listener()\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.focused === 'boolean') {\n      return this.focused\n    }\n\n    // document global can be unavailable in react native\n    if (typeof document === 'undefined') {\n      return true\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(\n      document.visibilityState,\n    )\n  }\n}\n\nexport const focusManager = new FocusManager()\n"],"mappings":";;AAOO,MAAMA,YAAN,SAA2BC,YAA3B,CAAwC;EAM7CC,WAAWA,CAAA,EAAG;IACZ;IACA,IAAK,CAAAC,KAAL,GAAcC,OAAD,IAAa;MACxB;MACA;MACA,IAAI,CAACC,QAAD,IAAaC,MAAM,CAACC,gBAAxB,EAA0C;QACxC,MAAMC,QAAQ,GAAGA,CAAA,KAAMJ,OAAO,EAA9B,CADwC;;QAGxCE,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA4CC,QAA5C,EAAsD,KAAtD;QACAF,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCC,QAAjC,EAA2C,KAA3C;QAEA,OAAO,MAAM;UACX;UACAF,MAAM,CAACG,mBAAP,CAA2B,kBAA3B,EAA+CD,QAA/C;UACAF,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoCD,QAApC;SAHF;MAKD;MACD;KAfF;EAiBD;EAESE,WAAWA,CAAA,EAAS;IAC5B,IAAI,CAAC,IAAK,CAAAC,OAAV,EAAmB;MACjB,IAAK,CAAAC,gBAAL,CAAsB,KAAKT,KAA3B;IACD;EACF;EAESU,aAAaA,CAAA,EAAG;IACxB,IAAI,CAAC,KAAKC,YAAL,EAAL,EAA0B;MAAA,IAAAC,aAAA;MACxB,CAAAA,aAAA,QAAKJ,OAAL,qBAAAI,aAAA,CAAAC,IAAA;MACA,IAAK,CAAAL,OAAL,GAAeM,SAAf;IACD;EACF;EAEDL,gBAAgBA,CAACT,KAAD,EAAuB;IAAA,IAAAe,cAAA;IACrC,IAAK,CAAAf,KAAL,GAAaA,KAAb;IACA,CAAAe,cAAA,QAAKP,OAAL,qBAAAO,cAAA,CAAAF,IAAA;IACA,KAAKL,OAAL,GAAeR,KAAK,CAAEgB,OAAD,IAAa;MAChC,IAAI,OAAOA,OAAP,KAAmB,SAAvB,EAAkC;QAChC,IAAK,CAAAC,UAAL,CAAgBD,OAAhB;MACD,CAFD,MAEO;QACL,KAAKf,OAAL;MACD;IACF,CANmB,CAApB;EAOD;EAEDgB,UAAUA,CAACD,OAAD,EAA0B;IAClC,MAAME,OAAO,GAAG,IAAK,CAAAF,OAAL,KAAiBA,OAAjC;IACA,IAAIE,OAAJ,EAAa;MACX,IAAK,CAAAF,OAAL,GAAeA,OAAf;MACA,KAAKf,OAAL;IACD;EACF;EAEDA,OAAOA,CAAA,EAAS;IACd,KAAKkB,SAAL,CAAeC,OAAf,CAAuB,CAAC;MAAEf;IAAF,CAAD,KAAkB;MACvCA,QAAQ;KADV;EAGD;EAEDgB,SAASA,CAAA,EAAY;IACnB,IAAI,OAAO,KAAKL,OAAZ,KAAwB,SAA5B,EAAuC;MACrC,OAAO,KAAKA,OAAZ;IACD,CAHkB;;IAMnB,IAAI,OAAOM,QAAP,KAAoB,WAAxB,EAAqC;MACnC,OAAO,IAAP;IACD;IAED,OAAO,CAACR,SAAD,EAAY,SAAZ,EAAuB,WAAvB,CAAoC,CAAAS,QAApC,CACLD,QAAQ,CAACE,eADJ,CAAP;EAGD;AA/E4C;AAkFlC,MAAAC,YAAY,GAAG,IAAI5B,YAAJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
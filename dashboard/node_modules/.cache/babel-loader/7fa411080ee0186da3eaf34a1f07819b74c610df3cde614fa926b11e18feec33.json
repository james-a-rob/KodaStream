{"ast":null,"code":"var _jsxFileName = \"/Users/jamesrobertson/Code/air/dashboard/src/StreamList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortEvents = {\n  none: events => events,\n  status: events => {\n    return events.sort((a, b) => {\n      if (a.title > b.title) {\n        return -1;\n      }\n      if (a.title < b.title) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n};\nconst filterEvents = {\n  byTitle: (events, filter) => {\n    return events.filter(event => {\n      return event.title.includes(filter);\n    });\n  }\n};\nconst fetchEvents = () => {\n  return fetch('http://localhost:4000/events').then(res => {\n    return res.json();\n  });\n};\nfunction StreamList() {\n  _s();\n  const [sortMethod, setSortMethod] = useState('none');\n  const [statusFilter, setStatusFilter] = useState('');\n  const applySort = useCallback(() => {\n    setSortMethod('status');\n  }, [setSortMethod]);\n  const applyFilter = useCallback(() => {\n    setStatusFilter('1');\n  }, [setStatusFilter]);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: ['all-events'],\n    queryFn: fetchEvents\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"An error has occurred: \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 21\n  }, this);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stream-list\",\n    \"data-testid\": \"events-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: applySort,\n      \"data-testid\": \"sort-by-status\",\n      children: \"Order by status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: applyFilter,\n      \"data-testid\": \"filter-by-title\",\n      children: \"Order by status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), filterEvents.byTitle(sortEvents[sortMethod](data), statusFilter).map((event, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": `events-list-item-${i}`,\n      children: event.title\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(StreamList, \"11rLt9DAd5OVc1Y8gX6PRcmtwVM=\", false, function () {\n  return [useQuery];\n});\n_c = StreamList;\nexport default StreamList;\nvar _c;\n$RefreshReg$(_c, \"StreamList\");","map":{"version":3,"names":["React","useState","useCallback","useQuery","jsxDEV","_jsxDEV","sortEvents","none","events","status","sort","a","b","title","filterEvents","byTitle","filter","event","includes","fetchEvents","fetch","then","res","json","StreamList","_s","sortMethod","setSortMethod","statusFilter","setStatusFilter","applySort","applyFilter","isLoading","error","data","queryKey","queryFn","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","i","_c","$RefreshReg$"],"sources":["/Users/jamesrobertson/Code/air/dashboard/src/StreamList.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\n\nimport {\n  useQuery,\n} from '@tanstack/react-query';\n\ntype Event = {\n  title: string\n}\n\ntype SortStates = 'none' | 'status';\nconst sortEvents = {\n  none: (events: Event[]) => (events),\n  status: (events: Event[]) => {\n    return events.sort((a, b) => {\n      if (a.title > b.title) {\n        return -1;\n      }\n      if (a.title < b.title) {\n        return 1;\n      }\n      return 0;\n    })\n  }\n}\n\nconst filterEvents = {\n  byTitle: (events: Event[], filter: string) => {\n    return events.filter((event) => {\n      return event.title.includes(filter)\n    })\n  }\n}\n\nconst fetchEvents = (): Promise<Event[]> => {\n  return fetch('http://localhost:4000/events').then(\n    (res) => {\n      return res.json()\n    })\n}\n\nfunction StreamList() {\n  const [sortMethod, setSortMethod] = useState<SortStates>('none');\n  const [statusFilter, setStatusFilter] = useState('');\n\n  const applySort = useCallback(() => {\n    setSortMethod('status');\n  }, [setSortMethod]);\n\n  const applyFilter = useCallback(() => {\n    setStatusFilter('1');\n  }, [setStatusFilter]);\n\n\n  const { isLoading, error, data } = useQuery({\n    queryKey: ['all-events'],\n    queryFn: fetchEvents\n  })\n\n  if (isLoading) return <div>Loading...</div>\n\n  if (error) return <div>An error has occurred: </div>\n\n\n  if (!data) {\n    return <div>No data</div>\n  }\n\n\n  return (\n    <div className=\"stream-list\" data-testid=\"events-list\">\n      <button onClick={applySort} data-testid=\"sort-by-status\">Order by status</button>\n      <button onClick={applyFilter} data-testid=\"filter-by-title\">Order by status</button>\n\n      {filterEvents.byTitle(sortEvents[sortMethod](data), statusFilter).map((event, i) => (\n        <div key={i} data-testid={`events-list-item-${i}`}>{event.title}</div>\n      ))}\n    </div>\n  );\n}\n\nexport default StreamList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
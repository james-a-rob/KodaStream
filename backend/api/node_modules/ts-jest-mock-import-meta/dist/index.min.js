"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.factory=exports.name=exports.version=void 0;const typescript_1=__importDefault(require("typescript"));exports.version="1.1",exports.name="ts-jest-mock-import-meta";const defaultMetaObjectReplacement={url:({fileName:e})=>`file://${e}`};function factory(e,r){const o=a=>typescript_1.default.isMetaProperty(a)&&a.keywordToken===typescript_1.default.SyntaxKind.ImportKeyword&&a.name.text==="meta";return a=>c=>{const s=n=>o(n)?typescript_1.default.factory.createObjectLiteralExpression(createImportMetaReplacement(r?.metaObjectReplacement??defaultMetaObjectReplacement,{fileName:c.fileName})):typescript_1.default.visitEachChild(n,s,a);return typescript_1.default.visitNode(c,s)}}exports.factory=factory;const createPropertyAssignmentValue=(e,r,o)=>{let t=typeof r=="function"?r(o):r;switch(typeof t){case"number":return typescript_1.default.factory.createNumericLiteral(t);case"string":return typescript_1.default.factory.createStringLiteral(t);case"boolean":return t?typescript_1.default.factory.createTrue():typescript_1.default.factory.createFalse();case"object":return typescript_1.default.factory.createObjectLiteralExpression(createImportMetaReplacement(t,o));default:throw new Error(`Property '${e}': value '${t}' type '${typeof t}' is not supported.`)}};function createImportMetaReplacement(e,r){let o=typeof e=="object"?e:e(r);return Object.entries(o).reduce((t,[a,c])=>(t.push(typescript_1.default.factory.createPropertyAssignment(typescript_1.default.factory.createIdentifier(a),createPropertyAssignmentValue(a,c,r))),t),[])}
